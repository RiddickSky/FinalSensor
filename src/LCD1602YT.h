#ifndef _LCD1602YT_H_
#define _LCD1602YT_H_

#define CLS1602			0x01
#define FlashCur1602	0x0f
#define NOFlashCur1602	0x0c


extern void WriteC( byte dd , byte jc );
extern void WriteD( byte dd);

#define Clear1602  WriteC(CLS1602,1);

extern void LcdSetXY( uint8 X, uint8 Y);

extern void v_LcdWriteSelfFont_f( void );
extern void v_LcdDisplaySelfFont_f( uint8 Address );

extern void DisC(byte x,byte y,byte dd);
extern void DisS(byte x,byte y,byte code *dd);
extern void LCDRst();



#endif



//后记：1602液晶使用的一般方法
/*********************************************************
引脚功能说明:
----------------------
1.GND	电源地
2.VDD	电源正
3.V0	液晶对比度调节
		（接VCC最低,接GND最高,一般接1K电阻至地）
----------------------
4.RS:	寄存器选择	1 -数据寄存器	0 -指令寄存器
5.RW:	读写控制	1 -读取			0 -写入
6.E :	使能信号	1 -输出至I/O口	1->0-从I/O口读入
----------------------
7-14:	DB0-DB7（8位I/O数据线）
----------------------
15.BLA	背光源正极
16.BLK	背光源负极
----------------------
//注:	1602能提供的电流很小.当用P0口时,上拉电阻至少要10K,
	太小则电压拉不下来,不能正常工作。
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
基本操作时序：
----------------------
			RS	RW	E		D0-D7
1.读状态	L	H	H		状态字
2.写指令	L	L	H->L	指令码
3.读数据	H	H	H		数据
4.写数据	H	L	H->L	数据
----------------------
状态字说明：
D7:	忙信号端（H-忙	L-不忙）
D6-D0:	当前数据地址指针
----------------------
//注:对控制器进行读写操作前,都必须进行"读写检测",确保D7为0
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
编程算法:
----------------------
启动:	延时400MS，让LCD进入工作状态
==========================================================
复位:	延时15ms
	写入指令38H（不检测忙信号）
	延时5MS
	写入指令38H（不检测忙信号）
	延时5MS
	写入指令38H（不检测忙信号）
	--------------------（以下每次读写均须检测忙信号）
	写指令38H（显示模式设置）
	写指令08H（显示关闭）
	写指令01H（清屏）
	写指令06H（显示光标移动设置）
	写指令0CH（显示开及光标设置）
==========================================================
检测忙:	DB0-DB7 = 0FFH
	RS = 0
	RW = 1
	E  = 1
	空操作（读状态字）
	循环检测，直到D7 = 0
==========================================================
写指令:	检测忙信号（如果需要的话）
	RS=0
	RW=0
	DB0-DB7=指令码
	E=1
	空操作（E脉宽>=450ns）
	E=0（产生一个下降沿）
==========================================================
写数据:	检测忙信号
	RS=1
	RW=0
	DB0-DB7=数据
	E=1
	空操作（E脉宽>=450ns）
	E=0（产生一个下降沿）
==========================================================
指定位置显示一个字符
---------------------
	写指令 = 地址码（ ??? 发送地址码,不用检测忙信号）
	写数据 = 字符
---------------------
地址码 = 真实地址 + 80H（最高位为1表示地址,为0表示指令）
---------------------
    液晶16*2
00 ---------- 0F | 10 ------ 27
40 ---------- 4F | 50 ------ 67
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
指令表
---------------------
序号 指令		 |RS RW  D7 D6 D5 D4  D3  D2  D1  D0
1. 清显示		 |0  0   0  0  0  0   0   0   0   1
2. 光标返回	 	 |0  0   0  0  0  0   0   0   1   *
3. 置输入模式	 |0  0   0  0  0  0   0   1  I/D  S
4. 显示开/关	 |0  0   0  0  0  0   1   D   C   B
5. 光标或字符移位|0  0   0  0  0  1  S/C R/L  *   *
6. 置功能	 	 |0  0   0  0  1  DL  N   F   *   *
7. 置CGRAM地址	 |0  0   0  1 --字符发生存储器地址--
8. 置DDRAM地址	 |0  0   1  ---显示数据存储器地址---
9. 读状态字		 |0  1   BF ------计数器地址--------
10.写到存储器	 |1  0   ----------要写的数---------
11.从存储器读数	 |1  1   ----------要读的数---------
	------------------------
	| CGRAM:字符发生存储器 |
	| DDRAM:数据存储器     |
	------------------------
---------------------
指令说明
---------------------
3，	I/D：光标		1-右移		0-左移
	S：所有文字		1-移动		0-不移动
4，	D：整体显示，	1-开		0-关
	C：光标控制，	1-有		0-无
	B：光标闪烁，	1-是		0-否
5，	S/C：			1-移动文字	0-移动光标
	R/L：			1-右移		0-左移
6，	DL： 			1-8位总线	0-4位总线
	N：				1-双行显示	0-单行显示
	F：点阵选择		1-5*10点阵	0-5*7点阵
9,	BF：忙标志位	1-忙		0-不忙
*********************************************************/