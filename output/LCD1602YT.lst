C51 COMPILER V9.00   LCD1602YT                                                             10/09/2010 00:00:17 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE LCD1602YT
OBJECT MODULE PLACED IN .\output\LCD1602YT.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE src\LCD1602YT.c BROWSE DEBUG OBJECTEXTEND PRINT(.\output\LCD1602YT.lst) OBJ
                    -ECT(.\output\LCD1602YT.obj)

line level    source

   1          #include<reg52.h>
   2          #include<intrins.h>
   3          #include"MacroAndConst.h"
   4          
   5          #define DB P1
   6          
   7          sbit LCDRS = P2^0;
   8          sbit LCDRW = P2^1;
   9          sbit LCDE = P2^2;
  10          sbit DB7 = DB^7;
  11          
  12          uint8 code SelfFont[ 40 ] =                       // 最多到40
  13          {       
  14                  0x08, 0x0f, 0x12, 0x0f, 0x0a, 0x1f, 0x02, 0x00,                 //字模"年"      0          
  15                  0x0f, 0x11, 0x1f, 0x11, 0x1f, 0x11, 0x13, 0x00,                 //字模"月"      1
  16                  0x1f, 0x11, 0x11, 0x1f, 0x11, 0x11, 0x1f, 0x00,                 //字模"日"      2
  17                  0x05, 0x0e, 0x14, 0x17, 0x14, 0x0e, 0x05, 0x00,                 //闹钟标志      3
  18             // 0x10, 0x18, 0x1C, 0x1E, 0x1C, 0x18, 0x10, 0x00,           //闹钟标志占两行(两个格子)      4 这个是播放的箭头符号
  19          
  20                  0x19, 0x1b, 0x04, 0x08, 0x08, 0x04, 0x03, 0x01                  //℃的字符         
  21          };
  22          
  23          //==================================================================//
  24          //                                                      延时函数                                                                //
  25          //==================================================================//
  26          //空操作
  27          void lnop()
  28          {
  29   1              ;
  30   1      }
  31          
  32          // 短延时5MS
  33          void Delay5(void)
  34          {
  35   1              word i=5552;
  36   1              while(i--);
  37   1      }
  38          
  39          //长延时400MS
  40          void Delay400(void)
  41          {
  42   1              byte i=5;
  43   1              word j;
  44   1              while(i--)
  45   1              {
  46   2                      j=7269;
  47   2                      while(j--);
  48   2              };
  49   1      }
  50          
  51          /***************************************
  52          检测忙信号方法:
  53          ***************************************/
  54          //忙信号等待
C51 COMPILER V9.00   LCD1602YT                                                             10/09/2010 00:00:17 PAGE 2   

  55          void Busy()
  56          {
  57   1       do
  58   1       {
  59   2              DB = 0xff;
  60   2              LCDRS = 0;
  61   2              LCDRW = 1;
  62   2              LCDE = 1;
  63   2              lnop();
  64   2       }while( DB7 );
  65   1      }
  66          
  67          /******************************************************
  68                                          读写函数
  69          [注:    RS      寄存器选择      1-数据寄存器    0-指令寄存器
  70                          RW      读/写选择       1-读                    0-写
  71                          E       使能信号        1-读取                  下降沿-写入
  72          *******************************************************/
  73          //写入指令      （RS=0  RW=0    E下降沿）
  74          void WriteC( byte dd , byte jc )
  75          {
  76   1              if(jc)  Busy();
  77   1              LCDRS = 0;
  78   1              LCDRW = 0;
  79   1              DB = dd;
  80   1              LCDE = 1;
  81   1              lnop();
  82   1              LCDE = 0;
  83   1      }
  84          
  85          //写入数据      （RS=1  RW=0    E下降沿）
  86          void WriteD( byte dd)
  87          {
  88   1              Busy();
  89   1              LCDRS = 1;
  90   1              LCDRW = 0;
  91   1              DB = dd;
  92   1              LCDE = 1;
  93   1              lnop();
  94   1              LCDE = 0;
  95   1      }
  96          
  97          void LcdSetXY( uint8 X, uint8 Y )                //设置显示坐标位置
  98          {
  99   1              uint8 Address ;
 100   1              if( Y == 0 )
 101   1              {
 102   2                      Address = 0x80 + X ;                //第一行
 103   2              }
 104   1              else
 105   1              {
 106   2                      Address = 0xc0 + X ;                //第二行
 107   2              }
 108   1              WriteC( Address,0 ) ;
 109   1      }
 110          
 111          //指定位置显示一个字符
 112          void DisC(byte x,byte y,byte dd)
 113          {
 114   1              y &= 0x1;
 115   1              x &= 0xF; //限制X不能大于15，Y不能大于1
 116   1              if (y)
C51 COMPILER V9.00   LCD1602YT                                                             10/09/2010 00:00:17 PAGE 3   

 117   1              {
 118   2                      x |= 0x40; //当要显示第二行时地址码+0x40;
 119   2              }
 120   1              x |= 0x80; // 算出指令码        => 80H + 真实地址码
 121   1              WriteC(x, 0); //这里不检测忙信号，发送地址码
 122   1              WriteD(dd);
 123   1      }
 124          
 125          
 126          //指定位置显示一串字符
 127          
 128          void DisS(byte x,byte y,byte code *dd)
 129          {
 130   1              byte i,l=0,j;
 131   1              while (dd[l] >31){l++;};        //判断字符串长度
 132   1              for (i=0;i<l;i++) 
 133   1              {
 134   2                      DisC(x++,y,dd[i]);
 135   2                      if (x==16)
 136   2                      {
 137   3                              x=0;    //列起始
 138   3                              y ^= 1; //行切换
 139   3                              if(y == 0)      //当显示满一屏后，停4S继续显示
 140   3                              {
 141   4                                      for(j=0; j<10; j++)
 142   4                                              Delay400();
 143   4                                      WriteC( 0x01,1 );
 144   4                              }
 145   3                      }
 146   2              }
 147   1      }
 148          
 149          
 150          void v_LcdWriteSelfFont_f( void )          //将自定义字符写入CGRAM(最多8个)
 151          {
 152   1              uint8 i ;
 153   1              for( i = 0 ; i < 40 ;i++ )
 154   1              {
 155   2                      WriteC( 0x40 + i,0 ) ;   //CGRAM起始地址从0x40开始
 156   2                      WriteD( SelfFont[ i ] ) ;
 157   2              }
 158   1      }
 159          
 160          void v_LcdDisplaySelfFont_f( uint8 Address )
 161          {
 162   1                      WriteD( Address ) ;         //Address取值范围0~7,分别对应8个自定义字符
 163   1      }
 164          
 165          
 166          /*****************************************************************
 167                             复位函数
 168          *****************************************************************/
 169          void LCDRst()
 170          {
 171   1              Delay5();       //延时15ms
 172   1              Delay5();
 173   1              Delay5();
 174   1              WriteC( 0x38,0 );       //置显示模式
 175   1              Delay5();                       //连续三次
 176   1              WriteC( 0x38,0 );       //不检测忙信号
 177   1              Delay5();
 178   1              WriteC( 0x38,0 );
C51 COMPILER V9.00   LCD1602YT                                                             10/09/2010 00:00:17 PAGE 4   

 179   1      //----------------------//以后每次都要检测忙信号
 180   1              WriteC( 0x38,1 );       //写指令（指令号，1-检测忙信号  0-不检测）
 181   1              WriteC( 0x08,1 );       //关显示
 182   1              WriteC( 0x01,1 );       //显显示屏
 183   1              WriteC( 0x06,1 );       //读/写一字符后，地址/光标均加一
 184   1              WriteC( 0x0c,1 );       //开显示
 185   1      }
 186          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    320    ----
   CONSTANT SIZE    =     40    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
